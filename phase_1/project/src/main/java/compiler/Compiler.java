/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package compiler;

import compiler.ASMGenerator.Generator;
import compiler.Lexer.Lexer;
import compiler.Parser.Parser;
import compiler.Semantic.Semantic;

import java.io.IOException;
import java.io.StringReader;

import static org.junit.Assert.fail;

public class Compiler {
    public static void main(String[] args) throws IOException {
        String input =
                // FUNCTION
                "const i int = 2;" +
                        "record Point {\n" +
                        "    x int;\n" +
                        "    y int;\n" +
                        "    z int;\n" +
                        "}" +
                        "proc square(a int, b int) void {\n" +
                        "writeln(\"abc\")" +
                        "var i bool = not(true);" +
                        "var d Point = Point(10, 20, 30);" +
                        "var r Point = Point(30, 20, 10);" +
                        "d.x = 5;" +
                        "d.z = 100;" +
                        "r.y = 22;" +
                        "return;\n" +
                        "}";
        String className = "Test";
        StringReader reader = new StringReader(input);
        Lexer lexer = new Lexer(reader);
        Parser parser = new Parser(lexer);
        Semantic semantic = new Semantic(parser);
        try {
            semantic.makeSemanticAnalysis();
            Generator generator = new Generator(semantic.getRoot(), className);
            generator.generateBytecode();
        } catch (SemanticAnalysisException e) {
            fail();
        }
    }

}